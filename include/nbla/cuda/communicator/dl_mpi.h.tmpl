// Copyright 2021 Sony Group Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// *WARNING*
// THIS FILE IS AUTO-GENERATED BY CODE GENERATOR.
// PLEASE DO NOT EDIT THIS FILE BY HAND!
// If you want to modify this file, edit following files.
// - python/src/nnabla/function_bases.py.tmpl
// - build-tools/code_generator/generate.py

#ifndef __NBLA_DL_MPI_H__
#define __NBLA_DL_MPI_H__

#ifdef DL_MPI_MAIN
#define DL_MPI_API
#else
#define DL_MPI_API extern
#endif

#if defined(c_plusplus) || defined(__cplusplus)
#define OMPI_PREDEFINED_GLOBAL(type, global)                                   \
  (static_cast<type>(static_cast<void *>(global)))
#else
#define OMPI_PREDEFINED_GLOBAL(type, global) ((type)((void *)(global)))
#endif

extern "C" {
${miscellaneous_constants}

${error_classes_and_codes}

${new_datatypes}

${c_datatypes}

${mpi_predefined_handles}

${null_handles}

${mpit_verbosity_levels}

${mpit_scopes}

${mpit_object_binding}

${mpit_pvar_classes}

${mpi_init_thread_constants}

${more_constants}

int dl_mpi_init(void);
int dl_mpi_fini(void);

#define PREDEFINED_DATATYPE_PAD 512
#define OPAL_MAX_ERROR_STRING 512

struct ompi_predefined_datatype_t {
  char padding[PREDEFINED_DATATYPE_PAD];
};

DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_c_bool;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_datatype_null;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_byte;

DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_comm_world;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_comm_self;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_comm_null;

DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_group_empty;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_group_null;

DL_MPI_API struct ompi_predefined_datatype_t *_ompi_request_null;

DL_MPI_API struct ompi_predefined_datatype_t *_ompi_message_null;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_message_no_proc;

DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_null;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_min;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_max;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_sum;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_prod;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_land;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_band;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_lor;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_bor;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_lxor;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_bxor;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_maxloc;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_minloc;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_replace;
DL_MPI_API struct ompi_predefined_datatype_t *_ompi_mpi_op_no_op;

struct ompi_group_t;
struct ompi_communicator_t;
struct ompi_datatype_t;
struct ompi_op_t;
typedef struct ompi_group_t *MPI_Group;
typedef struct ompi_communicator_t *MPI_Comm;
typedef struct ompi_datatype_t *MPI_Datatype;
typedef struct ompi_op_t *MPI_Op;

DL_MPI_API int (*MPI_Init)(int *, char ***);
DL_MPI_API int (*MPI_Init_thread)(int *, char ***, int, int *);
DL_MPI_API int (*MPI_Initialized)(int *);
DL_MPI_API int (*MPI_Finalized)(int *);
DL_MPI_API int (*MPI_Error_string)(int, char *, int *);
DL_MPI_API int (*MPI_Group_free)(MPI_Group *);
DL_MPI_API int (*MPI_Finalize)(void);
DL_MPI_API int (*MPI_Comm_group)(MPI_Comm, MPI_Group *);
DL_MPI_API int (*MPI_Group_incl)(MPI_Group, int, int *, MPI_Group *);
DL_MPI_API int (*MPI_Comm_size)(MPI_Comm, int *);
DL_MPI_API int (*MPI_Comm_rank)(MPI_Comm, int *);
DL_MPI_API int (*MPI_Allgather)(void *, int, MPI_Datatype, void *, int,
                                MPI_Datatype, MPI_Comm);
DL_MPI_API int (*MPI_Barrier)(MPI_Comm);
DL_MPI_API int (*MPI_Abort)(MPI_Comm, int);
typedef int (*MPI_Allreduce_t)(const void *sendbuf, void *recvbuf, int count,
                               MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
DL_MPI_API MPI_Allreduce_t MPI_Allreduce;

typedef int (*MPI_Bcast_t)(void *buffer, int count, MPI_Datatype datatype,
                           int root, MPI_Comm comm);
DL_MPI_API MPI_Bcast_t MPI_Bcast;

typedef int (*MPI_Comm_create_group_t)(MPI_Comm comm, MPI_Group group, int tag,
                                       MPI_Comm *newcomm);
DL_MPI_API MPI_Comm_create_group_t MPI_Comm_create_group;

typedef int (*MPI_Comm_free_t)(MPI_Comm *comm);
DL_MPI_API MPI_Comm_free_t MPI_Comm_free;
}

#endif
