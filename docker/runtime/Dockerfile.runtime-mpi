ARG BASE

############################################################
# Build OpenMPI
############################################################
# CentOS7:  1.10.7 (12)
# Ubuntu16: 1.10.2 (12)
# Ubuntu18: 2.1.1  (20)
# Ubuntu20: 4.0.3  (40)
# CentOS7:  3.1.3  (40)
# ABCI:     2.1.6  (20)
FROM ubuntu:18.04 as openmpi

RUN apt-get update
RUN apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        gfortran \
        libibverbs-dev

ARG MPIVER=3.1.6
ARG OMPI_BUILD_FLAGS
RUN mkdir /tmp/openmpi
RUN curl https://download.open-mpi.org/release/open-mpi/v${MPIVER%.*}/openmpi-${MPIVER}.tar.bz2 -o /tmp/openmpi/openmpi-${MPIVER}.tar.bz2
RUN tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-${MPIVER}.tar.bz2
RUN cd tmp/openmpi/openmpi-${MPIVER} \
    && ./configure \
        --prefix=/opt/openmpi \
        ${OMPI_BUILD_FLAGS} \
        CC=gcc \
        CXX=g++ \
        F77=gfortran \
        FC=gfortran \
    && make -j20 \
    && make install

############################################################
# Install Miniconda
############################################################
FROM ubuntu:18.04 as miniconda

RUN apt-get update
RUN apt-get install -y --no-install-recommends \
        bzip2 \
        ca-certificates \
        curl \
        openssh-client \
        wget

################################################## miniconda3
ARG PYTHON_VERSION_MAJOR
ARG PYTHON_VERSION_MINOR
ENV PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}

ARG CUDA_VERSION_MAJOR
ARG CUDA_VERSION_MINOR

RUN umask 0 \
    && mkdir -p /tmp/deps \
    && cd /tmp/deps \
    && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \
    && rm -rf Miniconda3-latest-Linux-x86_64.sh

RUN . /opt/miniconda3/bin/activate && conda install python=${PYVERNAME}
RUN . /opt/miniconda3/bin/activate && conda update -y --all
RUN . /opt/miniconda3/bin/activate && conda install pip
RUN . /opt/miniconda3/bin/activate && conda install wheel
RUN . /opt/miniconda3/bin/activate && conda install opencv || true
RUN . /opt/miniconda3/bin/activate \
        && pip install --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda${CUDA_VERSION_MAJOR}0 \
        || echo "Skip DALI installation (CUDA=${CUDA_VERSION_MAJOR}.0)" \
RUN . /opt/miniconda3/bin/activate && conda clean -y --all

ARG WHL_PATH
ADD $WHL_PATH/*.whl /tmp/
RUN . /opt/miniconda3/bin/activate && pip install /tmp/*.whl

############################################################
# Runtime image
############################################################
FROM ${BASE}

RUN cd /tmp \
	&& apt-get update \
        && apt-get install -y \
               bzip2 \
               ca-certificates \
               openssh-client \
               wget \
        && rm -rf /var/lib/apt/lists/* \
        && cd / \
        && rm -rf /tmp/*

################################################## OpenMPI
COPY --from=openmpi /opt/openmpi /opt/openmpi
ENV PATH /opt/openmpi/bin:$PATH
ENV LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH

################################################## miniconda3
COPY --from=miniconda /opt/miniconda3 /opt/miniconda3
ENV PATH /opt/miniconda3/bin:$PATH
ENV LD_LIBRARY_PATH /usr/lib64:/opt/miniconda3/lib:$LD_LIBRARY_PATH
