// Copyright 2022 Sony Group Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// *WARNING*
// THIS FILE IS AUTO-GENERATED BY CODE GENERATOR.
// PLEASE DO NOT EDIT THIS FILE BY HAND!
// If you want to modify this file, edit following files.
// - dl_nccl.cpp.tmpl
// - dl_nccl_generate.py

#define DL_NCCL_MAIN
#include <cstddef>
#include <dlfcn.h>
#include <nbla/cuda/communicator/dl_nccl.h>
#include <stdio.h>
#include <stdlib.h>

extern "C" {

static const char *ENV_HOME_LIST[] = {"NCCL_HOME"};

static const char *NCCL_SO_SEARCH_LIST[] = {
    "/usr/lib/x86_64-linux-gnu/libnccl.so",
    "/usr/lib/libnccl.so",
    "/usr/lib64/libnccl.so",
    "/lib/libnccl.so",
    "/lib64/libnccl.so",
    "/usr/local/lib64/libnccl.so",
    "/usr/local/lib/libnccl.so"};

static void *nccl_library_handle = 0;

int dl_nccl_init(void) {
  char *error;
  void *handle;
  int errcode = -1;

  dlerror(); // Clear any existing error

  for (int i = 0; i < sizeof(ENV_HOME_LIST) / sizeof(char *); ++i) {
    const char *nccl_home = getenv(ENV_HOME_LIST[i]);
    if (nccl_home) {
      char env_so_path[1024];
      snprintf(env_so_path, sizeof(env_so_path), "%s/lib/libnccl.so", nccl_home);
      nccl_library_handle = dlopen(env_so_path, RTLD_LAZY);
      if (nccl_library_handle) {
        errcode = 0;
        break;
      }
    }
  }

  if (errcode < 0) {
    for (int i = 0; i < sizeof(NCCL_SO_SEARCH_LIST) / sizeof(char *); ++i) {
      const char *so_path = NCCL_SO_SEARCH_LIST[i];
      nccl_library_handle = dlopen(so_path, RTLD_NOW);
      if (nccl_library_handle) {
        errcode = 0;
        break;
      }
    }
  }

  if (errcode < 0) {
    fprintf(stderr, "libnccl.so library is not found, distribution training "
                    "feature is disabled.\n");
    return -1;
  }

  handle = nccl_library_handle;

%for func_name, func_decl, _ in function_list:
  ${func_name} = (${func_decl})dlsym(handle, "${func_name}");
%endfor
  return 0;
}

int dl_nccl_fini(void) {
  if (nccl_library_handle != 0)
    dlclose(nccl_library_handle);
  return 0;
}
}
